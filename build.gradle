apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
  }
}

subprojects { project ->
  group = GROUP
  version = VERSION_NAME

  repositories {
    mavenCentral()
    jcenter()
  }

  apply plugin: 'jacoco'
  apply plugin: 'com.github.kt3k.coveralls'
  apply plugin: 'checkstyle'
  apply plugin: 'maven'

  checkstyle {
    configFile rootProject.file('checkstyle.xml')
  }

  task checkstyle(type: Checkstyle) {
    source 'src/main/java'
    ignoreFailures true
    showViolations true
    include '**/*.java'

    classpath = files()
  }

  afterEvaluate {
    if (project.tasks.findByName('check')) {
      check.dependsOn('checkstyle')
      check.dependsOn('jacocoTestReport')

      jacocoTestReport {
        reports {
          xml.enabled = true // coveralls plugin depends on xml format report
          html.enabled = true
        }

        //from http://stackoverflow.com/a/29887806/693752
        //from http://stackoverflow.com/a/17411305/693752
        //this doesn't work to filter the generated class out of the jacoco report
        //        afterEvaluate {
        //          classDirectories = files(classDirectories.files.collect {
        //            fileTree(exclude: ['**/*Factory*',
        //                          '**/*MemberInjector*'])
        //          })
        //        }
      }

      tasks.coveralls {
        dependsOn 'check'
      }

      tasks.withType(Test) {

        testLogging {
          events "passed", "skipped", "failed"
        }
        // ensure tasks don't overwrite the default report directories used by the 'test' task
        reports.html.destination = "${buildDir}/reports/${name}"
        reports.junitXml.destination = "${buildDir}/reports/${name}/results"
        binResultsDir = file("${buildDir}/reports/${name}/results/binary/${name}")
      }
    }
  }

}

ext.deps = [// Common
            inject        : 'javax.inject:javax.inject:1',

            // Compiler
            javapoet      : 'com.squareup:javapoet:1.4.0',

            // Android
            android: 'com.google.android:android:4.1.1.4',
            supportv4: 'com.google.android:support-v4:r7',

            // Test dependencies
            junit         : 'junit:junit:4.12',
            truth         : 'com.google.truth:truth:0.27',
            compiletesting: 'com.google.testing.compile:compile-testing:0.7',
            easymock      : 'org.easymock:easymock:3.4',]
