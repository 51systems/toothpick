apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
  }
}

repositories {
  mavenCentral()
  jcenter()
}

task jacocoTestReport(type: JacocoReport) {
  sourceDirectories = files()
  classDirectories = files()
  executionData = files()

  reports {
    html.enabled = true
    xml.enabled = true
    csv.enabled = false
  }

  // Work-around to allow us to build list of executionData files in doFirst
  onlyIf = {
    true
  }

  /*
   * Builds list of source dirs, class dirs, and executionData files
   * when task is run, not at script evaluation time
   */
  doFirst {
    subprojects.findAll { subproject ->
      subproject.pluginManager.hasPlugin('java')
    }.each { subproject ->
      additionalSourceDirs files((Set<File>) subproject.sourceSets.main.allJava.srcDirs)
      additionalClassDirs ((FileCollection) subproject.sourceSets.main.output)
      if (subproject.pluginManager.hasPlugin('jacoco')) {
        executionData subproject.tasks.jacocoTestReport.executionData
      }
    }

    executionData = files(executionData.findAll {
      it.exists()
    })
  }
}

subprojects { project ->
  group = GROUP
  version = VERSION_NAME

  repositories {
    mavenCentral()
    jcenter()
  }

  apply plugin: 'jacoco'
  apply plugin: 'com.github.kt3k.coveralls'
  apply plugin: 'checkstyle'
  apply plugin: 'maven'

  checkstyle {
    configFile rootProject.file('checkstyle.xml')
  }

  task checkstyle(type: Checkstyle) {
    source 'src/main/java'
    ignoreFailures true
    showViolations true
    include '**/*.java'

    classpath = files()
  }

  tasks.coveralls {
    dependsOn 'check'
  }

  afterEvaluate {
    if (project.tasks.findByName('check')) {
      check.dependsOn('checkstyle')
      check.dependsOn('jacocoTestReport')

      tasks.withType(Test) {

        testLogging {
          events "passed", "skipped", "failed"
        }
        // ensure tasks don't overwrite the default report directories used by the 'test' task
        reports.html.destination = "${buildDir}/reports/${name}"
        reports.junitXml.destination = "${buildDir}/reports/${name}/results"
        binResultsDir = file("${buildDir}/reports/${name}/results/binary/${name}")
      }
    }
  }

}

ext.deps = [// Common
            inject        : 'javax.inject:javax.inject:1',

            // Compiler
            javapoet      : 'com.squareup:javapoet:1.4.0',

            // Android
            android: 'com.google.android:android:4.1.1.4',
            supportv4: 'com.google.android:support-v4:r7',

            // Test dependencies
            junit         : 'junit:junit:4.12',
            truth         : 'com.google.truth:truth:0.27',
            compiletesting: 'com.google.testing.compile:compile-testing:0.7',
            easymock      : 'org.easymock:easymock:3.4',]
